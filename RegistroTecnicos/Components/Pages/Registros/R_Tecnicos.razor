@page "/Registro/"
@page "/Registro/{tecnicoId:int}"
@inject TecnicosServices tecnicosService
@rendermode InteractiveServer
<h3>Tecnicos</h3>
<PageTitle>Registro Tecnicos</PageTitle>
<EditForm Model="tecnicos" OnInvalidSubmit="Guardar" FormName="tecnicosForm">
    <DataAnnotationsValidator />
    <div class="card shadow-lg">
            <div class="card-header">
                <h3>Registrar Tecnico</h3>
                <div/>
                <div class="row">
                @*TecnicoId*@
                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4"></div>
                <label class="form-label">Id Tecnico</label>
                <div class="input-group mb-3">
                    <InputNumber @bind-Value="tecnicos.IdTecnico" class="form-control"/>
                    
                </div>

            </div>
            @*Nombre*@
            <div class="mb-3">
                <label class="form-label">Nombre</label>
                <div class="col-6"><InputText class="form-control" placeholder="Ingrese un nombre" @bind-Value="tecnicos.Nombre"></InputText></div>

            </div>
            @*SueldoHora*@
            <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4">
                <label class="form-label">Sueldo Hora</label>
                <div class="input-group mb-3">
                    <InputNumber @bind-Value="tecnicos.SueldoHora" class="form-control" aria-describedby="buscarButton" />

                </div>
            </div>
        </div>
         @*Botones*@
                    <div class="card-footer d-flex justify-content-between">
                        @*Crear*@
                        <button type="button" class="btn btn-primary mx-2" @onclick="() => Guardar()">
                            <span> Crear <i class="bi bi-file-earmark" /></span>
                        </button>
                        @*Nuevo*@
            <button type="button" class="btn btn-primary mx-2" @onclick="() => Nuevo()">
                <span> Nuevo <i class="bi bi-file-earmark" /></span>
            </button>
            @*Eliminar*@
            
            <button type="button" class="btn btn-primary mx-3" @onclick="() => Eliminar()">
                <span> Eliminar <i class="bi bi-file-earmark" /></span>
            </button>
                        @*Volver*@
                            <a href="/Consulta" class="btn btn-secondary">
                                <span> Volver a Consulta </span><i class="bi bi-arrow-return-left" />
                            </a>
                    </div>
            
        </div>
    
</EditForm>


@code {
    [Parameter]
    public int? tecnicoId { get; set; }
    public Tecnicos tecnicos { get; set; } = new Tecnicos();
    NotificationService notificationService = new NotificationService();
    public bool Existe { get; set; } = false;
    public bool Guardo { get; set; } = false;
    public bool Encontro { get; set; } = false;


    protected override void OnInitialized()
    {
        if (tecnicoId.HasValue)
        {
            tecnicos.IdTecnico = tecnicoId.Value;
            Buscar();
        }
    }

    public void Guardar()
    {
        
           if (Validar()){
                return;
           }
            else
            {
                var crear = tecnicosService.Guardar(tecnicos);
            }
    }

    public async Task Buscar()
    {
        var encontrado = await tecnicosService.Buscar(tecnicos.IdTecnico);
        if (encontrado != null)
            tecnicos = encontrado;

        Encontro = true;
    }
    public void Nuevo()
    {
        this.tecnicos = new Tecnicos();
    }
    public async Task Eliminar()
    {
        if (!Validar())
        {
            bool eliminado = await tecnicosService.Eliminar(tecnicos.IdTecnico); 

            if (eliminado)
            {
                notificationService.Notify(new NotificationMessage
                    {
                        Severity = NotificationSeverity.Success,
                        Summary = "Eliminado",
                        Detail = "Registro eliminado correctamente",
                        Duration = 5000
                    });
            }
            else
            {
                notificationService.Notify(new NotificationMessage
                    {
                        Severity = NotificationSeverity.Error,
                        Summary = "Error",
                        Detail = "Error al eliminar el registro",
                        Duration = 5000
                    });
            }
        }
    }
    public bool Validar()
    {
        Existe = (tecnicosService.Listar(t => t.Nombre!.ToLower() == tecnicos.Nombre!.ToLower() && t.IdTecnico != t.IdTecnico).Any());
        return Existe;
    }

}
        
 
  
