@page "/TiposTecnicos/Create"
@page "/TiposTecnicos/Create/{TipoId:int}"
@inject TiposTecnicosServices tipoTecnicosService
@rendermode InteractiveServer

<EditForm Model="TiposTecnicos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
   <div class="card shadow-lg border-0 rounded" style="background-color: #f8f9fa;">
        <div class="card-header bg-primary text-white" style="text-align: center;">
            <h3> <i class="fas fa-clipboard-list"></i> Registro TipoT&eacute;cnicos</h3>
        </div>
        <div class="card-body">
            @* TipoId *@
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="IdTipo" class="form-label">IdTipo:</label>
                    <div class="input-group">
                        <div style="width: 40%; height: 1em;">
                            <InputNumber @bind-Value="TiposTecnicos.TipoTecnicoId" class="form-control" style="font-size: 0.8em;" aria-describedby="BotonBuscar" />
                            <ValidationMessage For="@(() => TiposTecnicos.TipoTecnicoId)" />
                        </div>
                    </div>
                </div>
            </div>
            @* Descripcion *@
            <div class="mb-3">
                <label for="Descripcion" class="form-label">Descripci&oacute;n:</label>
                <InputText @bind-Value="TiposTecnicos.Descripcion" class="form-control" />
                <ValidationMessage For="@(() => TiposTecnicos.Descripcion)" />
           </div>          
        </div>
    </div>
    <div class="card-footer bg-light d-flex justify-content-center mt-3">
        <div class="btn-group">
            @*Boton Nuevo*@
            <button type="button" class="btn btn-outline-primary ml-2" @onclick="Nuevo"><span class="bi bi-plus"></span> Nuevo </button>
            @*Boton Guardar*@
            <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span> Guardar </button>
            @*Boton Retroceder*@
            <a type="button" href="/TiposTecnicos/Index/" class="btn btn-outline-danger"><span class="bi bi-arrow-bar-left"></span> Retroceder </a>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int TipoId { get; set; }
    public int? tipotecnicoId { get; set; }

    public TiposTecnicos TiposTecnicos { get; set; } = new TiposTecnicos();


    protected override void OnInitialized()
    {
        if (tipotecnicoId.HasValue)
        {
            TiposTecnicos.TipoTecnicoId = tipotecnicoId.Value;
        }
    }
    public void Nuevo()
    {

    }
   

    public async Task Guardar()
    {
        if (await Validar())
        {
            return;
        }
        else
        {
            var guardar = await tipoTecnicosService.Guardar(TiposTecnicos);
            if (guardar)
            {
               
                Nuevo();
            }
            else
            {
                
            }

        }
    }
    public async Task<bool> Validar()
    {
        bool existeDescripcion = await tipoTecnicosService.ExisteDescripcion(TiposTecnicos.Descripcion, TiposTecnicos.TipoTecnicoId);
        return existeDescripcion;
    }
}
